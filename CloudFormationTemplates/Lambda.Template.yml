AWSTemplateFormatVersion: '2010-09-09'

Description: 'CephalonAhmes Lambda stack'

Parameters:
  CEPHALONAHMESPRAWUSERNAME:
    Type: String
  CEPHALONAHMESPRAWPASSWORD:
    Type: String
  CEPHALONAHMESPRAWCLIENTSECRET:
    Type: String
  CEPHALONAHMESPRAWCLIENTID:
    Type: String
  ConfigurationName:
    Type: String


Resources:
  CephalonAhmesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cephalonahmesbucket

  CephalonAhmesFunctionRole:
    Type: AWS::IAM::Role
    Properties:
        RoleName: CephalonAhmesFunctionRole
        Policies:
          - PolicyName: CephalonAhmesBucketFullAccess
            PolicyDocument: !Sub |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": ["s3:PutObject"],
                        "Resource": [
                            "${CephalonAhmesBucket.Arn}"
                        ]
                    }
                ]
              }
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
              - Effect: Allow
                Principal:
                  Service: lambda.amazonaws.com
                Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CephalonAhmesFunction:
      Type: AWS::Lambda::Function
      Properties:
          PackageType: Image
          Description: CephalonAhmes project
          Role: !GetAtt 'CephalonAhmesFunctionRole.Arn'
          Environment : 
            Variables: 
              CEPHALONAHMES_PRAW_CLIENT_ID:
                Ref: CEPHALONAHMESPRAWCLIENTID
              CEPHALONAHMES_PRAW_CLIENT_SECRET: 
                Ref: CEPHALONAHMESPRAWCLIENTSECRET
              CEPHALONAHMES_PRAW_PASSWORD: 
                Ref: CEPHALONAHMESPRAWPASSWORD
              CEPHALONAHMES_PRAW_USERNAME: 
                Ref: CEPHALONAHMESPRAWUSERNAME
              ConfigurationName: 
                Ref: ConfigurationName
          FunctionName: CephalonAhmesFunction
          Code:
            ImageUri: !Join
                - ''
                - - !ImportValue CephalonAhmesRepositoryUri
                  - ":latest"

  CephalonAhmesCloudWatchRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Rule to trigger CephalonAhmesFunction every 2 minutes"
      Name: "CephalonAhmesCloudWatchRule"
      State: "ENABLED"
      ScheduleExpression: "rate(2 minutes)"
      Targets:
        - Arn: !GetAtt 'CephalonAhmesFunction.Arn'
