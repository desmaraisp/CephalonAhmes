name: Run integration test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: docker-practice/actions-setup-docker@master

    - name: Run Tests
      shell: pwsh
      run: |
        echo "Starting docker build"
        docker build . -t test --target test


        $content = @'
        PRAW_CLIENT_ID=${{ secrets.PRAW_CLIENT_ID }}
        PRAW_CLIENT_SECRET=${{ secrets.PRAW_CLIENT_SECRET }}
        PRAW_PASSWORD=${{ secrets.PRAW_PASSWORD }}
        PRAW_USERNAME=${{ secrets.PRAW_USERNAME }}
        '@
        
        $content | Set-Content -Path ./.env

        docker run --env-file ./.env --name pytest test
        echo "Tests completed"
        if($LASTEXITCODE -eq 1){
          throw "Unit tests failed"
        }
        docker cp pytest:/app/coverage.xml ./coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

    - name: Push to AWS
      if: ${{ github.event_name == 'push' }}
      shell: pwsh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
      run: |
        echo "Deploying"
        aws cloudformation deploy --template-file ./CloudFormationTemplates/ECR.Template.yml --stack-name CephalonAhmesECR --capabilities CAPABILITY_IAM
        $RepositoryUri  = aws cloudformation list-exports --query "Exports[?Name=='CephalonAhmesRepositoryUri'].Value" --no-paginate --output text

        docker build . -t $RepositoryUri --target release

        aws ecr get-login-password | docker login --username AWS --password-stdin  ($RepositoryUri -split "/")[0]
        docker push $RepositoryUri

        @{Parameters = @{
          CEPHALONAHMES_PRAW_CLIENT_ID = "${{ secrets.PRAW_CLIENT_ID }}";
          CEPHALONAHMES_PRAW_CLIENT_SECRET = "${{ secrets.PRAW_CLIENT_SECRET }}";
          CEPHALONAHMES_PRAW_PASSWORD = "${{ secrets.PRAW_PASSWORD }}";
          CEPHALONAHMES_PRAW_USERNAME = "${{ secrets.PRAW_USERNAME }}";
          ConfigurationName = 'staging'
        }} | ConvertTo-Json | Set-Content -Path ./params.json

        aws cloudformation deploy --template-file ./CloudFormationTemplates/Lambda.Template.yml `
          --stack-name CephalonAhmesLambda --capabilities CAPABILITY_IAM `
          --parameter-overrides file://params.json
